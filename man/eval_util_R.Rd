% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utility.R
\name{eval_util_R}
\alias{eval_util_R}
\title{Expected utility for regional species diversity assessments.}
\usage{
eval_util_R(settings, fit, N_rep = 1, cores = 1L)
}
\arguments{
\item{settings}{A data frame that specifies a set of conditions under which
the utility is evaluated. It must include a column named \code{J}, \code{K}, and \code{N},
which specifies the number of sites, the number of replicates per site, and
the sequencing depth per replicate, respectively.
\code{J}, \code{K}, and \code{N} must be numeric vectors greater than 0. When \code{J} and \code{K}
contains a decimal, the decimal part is discarded and treated as an integer.
Additional columns are ignored but may be included.}

\item{fit}{An \code{occumbFit} object containing a posterior sample of the
relevant parameters.}

\item{N_rep}{Controls the sample size for Monte Carlo integration.
The integral is evaluated using a total of \code{N_sample * N_rep} random samples,
where \code{N_sample} is the size of the MCMC sample provided as \code{fit}.}

\item{cores}{The number of cores to use for parallelization.}
}
\value{
A data frame with a column named \code{Utility} in which the estimates of
expected utility are stored. This is obtained by adding the \code{Utility} column
to the data frame provided in the \code{settings} argument.
}
\description{
\code{eval_util_R()} evaluates the expected utility for the regional
species diversity assessment using Monte Carlo integration.
}
\details{
The utility of the regional species diversity assessment can be defined as
the number of species in the region of interest expected to be detected
(Fukaya et al. 2022). \code{eval_util_R()} evaluates this utility for the region
modeled in the \code{occumbFit} object for the combination of \code{J}, \code{K}, and \code{N}
values specified in the \code{conditions} argument.
Such evaluations can be used to balance \code{J}, \code{K}, and \code{N} to maximize the
utility under a constant budget (possible combinations of \code{J}, \code{K}, and \code{N}
under specified budget and cost values are easily obtained using
\code{list_cond_R()}; see the example below).
It is also possible to examine how the utility varies with different \code{J},
\code{K}, and \code{N} values without setting a budget level, which may be useful to know
the satisfactory level of \code{J}, \code{K}, and \code{N} from a purely technical point of
view.

The expected utility is defined as the expected value of the conditional
utility of the form:
\deqn{U(J, K, N \mid \boldsymbol{r}, \boldsymbol{u}) = \sum_{i = 1}^{I}\left\{1 - \prod_{j = 1}^{J}\prod_{k = 1}^{K}\left(1 - \frac{u_{ijk}r_{ijk}}{\sum_{m = 1}^{I}u_{mjk}r_{mjk}} \right)^N \right\}}{U(J, K, N | r, u) = sum_{i}((1 - \prod_{j}\prod_{k}(1 - (u[i, j, k] * r[i, j, k])/sum(u[, j, k] * r[, j, k])))^N)}
where \eqn{u_{ijk}}{u[i, j, k]} is a latent indicator variable representing
the inclusion of the sequence of species \eqn{i}{i} in replicate \eqn{k}{k}
at site \eqn{j}{j} and \eqn{r_{ijk}}{r[i, j, k]} is a latent variable that
is proportional to the relative frequency of the sequence of species
\eqn{i}{i}, conditional on its presence in replicate \eqn{k}{k} at site
\eqn{j}{j} (Fukaya et al. 2022).
Expectations are taken with respect to the posterior predictive distributions
of \eqn{\boldsymbol{r} = \{r_{ijk}\}}{r} and
\eqn{\boldsymbol{u} = \{u_{ijk}\}}{u}, which are evaluated numerically by
Monte Carlo integration using MCMC samples in the \code{occumbFit} object. Higher
approximation accuracy can be obtained by increasing the value of \code{N_rep}.

The expected utility is evaluated assuming that all replicates are
homogeneous in the sense that the model parameters are constant across
replicates. For this reason, in the current version, \code{eval_util_R()}
cannot be applied if the supplied \code{occumbFit} object contains a model with
replicate covariates.

If the relevant parameters are modeled as a function of site covariates, the
expected utility is evaluated to account for the site heterogeneity of the
parameters. Specifically, to incorporate site heterogeneity, the parameter
values for each \code{J} site are determined by selecting site-specific
parameters estimated in the model via random sampling with replacement.
Thus, the expected utility is evaluated by assuming the set of parameter
values for the sites modeled in the \code{fit} as a statistical population of
site-specific parameters.

Monte Carlo integration is executed in parallel on multiple CPU cores where
the \code{cores} argument controls the degree of parallelization.
}
\section{References}{

K. Fukaya, N. I. Kondo, S. S. Matsuzaki and T. Kadoya (2022)
Multispecies site occupancy modelling and study design for spatially
replicated environmental DNA metabarcoding. \emph{Methods in Ecology
and Evolution} \strong{13}:183--193.
\doi{10.1111/2041-210X.13732}
}

\examples{
\dontrun{
# Generate the smallest random dataset (2 species * 2 sites * 2 reps)
I <- 2 # Number of species
J <- 2 # Number of sites
K <- 2 # Number of replicates
data <- occumbData(
    y = array(sample.int(I * J * K), dim = c(I, J, K)),
    spec_cov = list(cov1 = rnorm(I)),
    site_cov = list(cov2 = rnorm(J),
                    cov3 = factor(1:J)),
    repl_cov = list(cov4 = matrix(rnorm(J * K), J, K)))

# Fitting a null model
fit <- occumb(data = data)

# Estimate expected utility
util1 <- eval_util_R(expand.grid(J = 1:3, K = 1:3, N = c(1E3, 1E4, 1E5)),
                     fit) # Arbitrary J, K, and N values
util2 <- eval_util_R(list_cond_R(budget = 50000,
                                 lambda1 = 0.01,
                                 lambda2 = 5000,
                                 lambda3 = 5000),
                     fit) # J, K, and N values under specified budget and cost
util3 <- eval_util_R(list_cond_R(budget = 50000,
                                 lambda1 = 0.01,
                                 lambda2 = 5000,
                                 lambda3 = 5000,
                                 K = 1:5),
                     fit) # K values restricted
util4 <- eval_util_R(list_cond_R(budget = 50000,
                                 lambda1 = 0.01,
                                 lambda2 = 5000,
                                 lambda3 = 5000,
                                 J = 1:3, K = 1:5),
                     fit) # J and K values restricted
}
}
